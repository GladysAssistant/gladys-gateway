language: node_js

node_js:
  - "8"

addons:
  postgresql: "9.6"
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - g++-4.8

services:
  - postgresql
  - redis-server
  - docker

env:
  global:
    - POSTGRESQL_DATABASE=travis_ci_test
    - POSTGRESQL_DATABASE_TEST=travis_ci_test
    - POSTGRESQL_USER=postgres
    - POSTGRESQL_HOST=localhost
    - POSTGRESQL_PASSWORD=
    - POSTGRESQL_PORT=5432
    - REDIS_HOST=localhost
    - REDIS_PORT=6379
    - SERVER_PORT=3000
    - MAILGUN_API_KEY=test
    - MAILGUN_DOMAIN=test.mailgun.org
    - EMAIL_FROM="Gladys Project <test.mailgun.org>"
    - DISABLE_EMAIL=true
    - JWT_ACCESS_TOKEN_SECRET=TESTTESTETSTTE5rPzwPhXvLt9Jb8CEeq5hr0GRyteTVL9wg1QKJJMImUjbJsLrl36hiNvmflDVm
    - JWT_REFRESH_TOKEN_SECRET=TESTESTESTESTSTiqgbxZ5107HBHpR70OeVn9Lg3tG5HBDvUwrV2Rqur7LsxDZLDsmELtRuDvfMxGL7
    - STORAGE_ENDPOINT=fra1.digitaloceanspaces.com
    - STORAGE_BUCKET=test
    - CXX=g++-4.8

before_install:
  - npm install -g lerna eslint db-migrate codecov nyc
  - lerna bootstrap
  - cd src/gladys-gateway-js && npm rebuild && cd ../..
  - mkdir src/gladys-gateway-server/.nyc_output

before_script:
  - psql -c 'create database travis_ci_test;' -U postgres
  - psql -c 'select version();' -U postgres
  - cd src/gladys-gateway-server && db-migrate up && cd ../..

script:
  - lerna run eslint
  - lerna run coverage

after_success:
  - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
  - docker build -t gladysassistant/gladys-gateway-server:latest ./src/gladys-gateway-server
  - if [[ $TRAVIS_BRANCH = master ]]; then docker push gladysassistant/gladys-gateway-server:latest; else true; fi
